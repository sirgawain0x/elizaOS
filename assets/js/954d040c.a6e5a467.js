"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[14534],{71184:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var s=a(14041);const n={},r=s.createContext(n);function i(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(r.Provider,{value:t},e.children)}},72455:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"type-aliases/Metadata","title":"Metadata","description":"@elizaos/core / Metadata","source":"@site/api/type-aliases/Metadata.md","sourceDirName":"type-aliases","slug":"/type-aliases/Metadata","permalink":"/api/type-aliases/Metadata","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"MemoryTypeAlias","permalink":"/api/type-aliases/MemoryTypeAlias"},"next":{"title":"PluginEvents","permalink":"/api/type-aliases/PluginEvents"}}');var n=a(31085),r=a(71184);const i={},o="Type Alias: Metadata",c={},l=[];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"/api/",children:"@elizaos/core"})," / Metadata"]}),"\n",(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"type-alias-metadata",children:"Type Alias: Metadata"})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Metadata"})," = ",(0,n.jsx)(t.code,{children:"Record"}),"<",(0,n.jsx)(t.code,{children:"string"}),", ",(0,n.jsx)(t.code,{children:"unknown"}),">"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["Defined in: ",(0,n.jsx)(t.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/types/primitives.ts#L97",children:"packages/core/src/types/primitives.ts:97"})]}),"\n",(0,n.jsx)(t.p,{children:"A generic type for metadata objects, allowing for arbitrary key-value pairs.\nThis encourages consumers to perform type checking or casting."})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);