"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[93052],{71184:(e,r,t)=>{t.d(r,{R:()=>c,x:()=>a});var i=t(14041);const n={},s=i.createContext(n);function c(e){const r=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),i.createElement(s.Provider,{value:r},e.children)}},77727:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"interfaces/ServiceTypeRegistry","title":"ServiceTypeRegistry","description":"@elizaos/core / ServiceTypeRegistry","source":"@site/api/interfaces/ServiceTypeRegistry.md","sourceDirName":"interfaces","slug":"/interfaces/ServiceTypeRegistry","permalink":"/api/interfaces/ServiceTypeRegistry","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"ServiceError","permalink":"/api/interfaces/ServiceError"},"next":{"title":"State","permalink":"/api/interfaces/State"}}');var n=t(31085),s=t(71184);const c={},a="Interface: ServiceTypeRegistry",o={},p=[{value:"Example",id:"example",level:2}];function l(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/api/",children:"@elizaos/core"})," / ServiceTypeRegistry"]}),"\n",(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"interface-servicetyperegistry",children:"Interface: ServiceTypeRegistry"})}),"\n",(0,n.jsxs)(r.p,{children:["Defined in: ",(0,n.jsx)(r.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/types/service.ts#L17",children:"packages/core/src/types/service.ts:17"})]}),"\n",(0,n.jsx)(r.p,{children:"Core service type registry that can be extended by plugins via module augmentation.\nPlugins can extend this interface to add their own service types:"}),"\n",(0,n.jsx)(r.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"declare module '@elizaos/core' {\n  interface ServiceTypeRegistry {\n    MY_CUSTOM_SERVICE: 'my_custom_service';\n  }\n}\n"})})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);