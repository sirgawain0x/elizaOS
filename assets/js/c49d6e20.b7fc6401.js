"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[44088],{71184:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>i});var n=t(14041);const a={},r=n.createContext(a);function c(e){const s=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),n.createElement(r.Provider,{value:s},e.children)}},90587:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"@elizaos/namespaces/v2/interfaces/EnhancedState","title":"EnhancedState","description":"@elizaos/core / v2 / EnhancedState","source":"@site/api/@elizaos/namespaces/v2/interfaces/EnhancedState.md","sourceDirName":"@elizaos/namespaces/v2/interfaces","slug":"/@elizaos/namespaces/v2/interfaces/EnhancedState","permalink":"/api/@elizaos/namespaces/v2/interfaces/EnhancedState","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"EmbeddingSearchResult","permalink":"/api/@elizaos/namespaces/v2/interfaces/EmbeddingSearchResult"},"next":{"title":"Entity","permalink":"/api/@elizaos/namespaces/v2/interfaces/Entity"}}');var a=t(31085),r=t(71184);const c={},i="Interface: EnhancedState",l={},o=[{value:"Indexable",id:"indexable",level:2},{value:"Properties",id:"properties",level:2},{value:"values",id:"values",level:3},{value:"data",id:"data",level:3},{value:"text",id:"text",level:3}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"/api/",children:"@elizaos/core"})," / ",(0,a.jsx)(s.a,{href:"/api/@elizaos/namespaces/v2/",children:"v2"})," / EnhancedState"]}),"\n",(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"interface-enhancedstate",children:"Interface: EnhancedState"})}),"\n",(0,a.jsxs)(s.p,{children:["Defined in: ",(0,a.jsx)(s.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/specs/v2/types.ts#L2290",children:"packages/core/src/specs/v2/types.ts:2290"})]}),"\n",(0,a.jsxs)(s.p,{children:["Enhanced State interface with more specific types for its core properties.\nThis interface provides a more structured representation of an agent's conversational state,\nbuilding upon the base ",(0,a.jsx)(s.code,{children:"State"})," by typing ",(0,a.jsx)(s.code,{children:"values"})," and ",(0,a.jsx)(s.code,{children:"data"})," as ",(0,a.jsx)(s.code,{children:"StateObject"}),".\nThe ",(0,a.jsx)(s.code,{children:"text"})," property typically holds a textual summary or context derived from the state.\nAdditional dynamic properties are still allowed via the index signature ",(0,a.jsx)(s.code,{children:"[key: string]: StateValue;"}),"."]}),"\n",(0,a.jsx)(s.h2,{id:"indexable",children:"Indexable"}),"\n",(0,a.jsxs)(s.p,{children:["[",(0,a.jsx)(s.code,{children:"key"}),": ",(0,a.jsx)(s.code,{children:"string"}),"]: ",(0,a.jsx)(s.a,{href:"/api/@elizaos/namespaces/v2/type-aliases/StateValue",children:(0,a.jsx)(s.code,{children:"StateValue"})})]}),"\n",(0,a.jsx)(s.p,{children:"Allows for additional dynamic properties to be added to the state object."}),"\n",(0,a.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,a.jsx)(s.h3,{id:"values",children:"values"}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"values"}),": ",(0,a.jsx)(s.a,{href:"/api/@elizaos/namespaces/v2/interfaces/StateObject",children:(0,a.jsx)(s.code,{children:"StateObject"})})]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Defined in: ",(0,a.jsx)(s.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/specs/v2/types.ts#L2292",children:"packages/core/src/specs/v2/types.ts:2292"})]}),"\n",(0,a.jsx)(s.p,{children:"Holds directly accessible state values, often used for template rendering or quick lookups."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"data",children:"data"}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"data"}),": ",(0,a.jsx)(s.a,{href:"/api/@elizaos/namespaces/v2/interfaces/StateObject",children:(0,a.jsx)(s.code,{children:"StateObject"})})]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Defined in: ",(0,a.jsx)(s.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/specs/v2/types.ts#L2294",children:"packages/core/src/specs/v2/types.ts:2294"})]}),"\n",(0,a.jsx)(s.p,{children:"Stores more complex or structured data, potentially namespaced by providers or internal systems."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h3,{id:"text",children:"text"}),"\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"text"}),": ",(0,a.jsx)(s.code,{children:"string"})]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Defined in: ",(0,a.jsx)(s.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/specs/v2/types.ts#L2296",children:"packages/core/src/specs/v2/types.ts:2296"})]}),"\n",(0,a.jsx)(s.p,{children:"A textual representation or summary of the current state, often used as context for models."})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);