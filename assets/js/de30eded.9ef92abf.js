"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[44003],{71184:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var n=a(14041);const s={},c=n.createContext(s);function i(e){const t=n.useContext(c);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(c.Provider,{value:t},e.children)}},92527:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"@elizaos/namespaces/v2/type-aliases/EventDataObject","title":"EventDataObject","description":"@elizaos/core / v2 / EventDataObject","source":"@site/api/@elizaos/namespaces/v2/type-aliases/EventDataObject.md","sourceDirName":"@elizaos/namespaces/v2/type-aliases","slug":"/@elizaos/namespaces/v2/type-aliases/EventDataObject","permalink":"/api/@elizaos/namespaces/v2/type-aliases/EventDataObject","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"DbConnection","permalink":"/api/@elizaos/namespaces/v2/type-aliases/DbConnection"},"next":{"title":"EventHandler","permalink":"/api/@elizaos/namespaces/v2/type-aliases/EventHandler"}}');var s=a(31085),c=a(71184);const i={},o="Type Alias: EventDataObject",r={},l=[];function p(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/api/",children:"@elizaos/core"})," / ",(0,s.jsx)(t.a,{href:"/api/@elizaos/namespaces/v2/",children:"v2"})," / EventDataObject"]}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"type-alias-eventdataobject",children:"Type Alias: EventDataObject"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"EventDataObject"})," = ",(0,s.jsx)(t.code,{children:"Record"}),"<",(0,s.jsx)(t.code,{children:"string"}),", ",(0,s.jsx)(t.code,{children:"unknown"}),">"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Defined in: ",(0,s.jsx)(t.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/specs/v2/types.ts#L2317",children:"packages/core/src/specs/v2/types.ts:2317"})]}),"\n",(0,s.jsxs)(t.p,{children:["Represents a generic data object that can be passed as a payload in an event.\nThis type is often used in ",(0,s.jsx)(t.code,{children:"TypedEventHandler"})," to provide a flexible yet somewhat\nstructured way to handle event data. Specific event handlers might cast this to a\nmore concrete type based on the event being processed."]})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);