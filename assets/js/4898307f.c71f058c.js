"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[48338],{20345:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"@elizaos/namespaces/v2/interfaces/BaseMetadata","title":"BaseMetadata","description":"@elizaos/core / v2 / BaseMetadata","source":"@site/api/@elizaos/namespaces/v2/interfaces/BaseMetadata.md","sourceDirName":"@elizaos/namespaces/v2/interfaces","slug":"/@elizaos/namespaces/v2/interfaces/BaseMetadata","permalink":"/api/@elizaos/namespaces/v2/interfaces/BaseMetadata","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"AudioProcessingParams","permalink":"/api/@elizaos/namespaces/v2/interfaces/AudioProcessingParams"},"next":{"title":"BaseModelParams","permalink":"/api/@elizaos/namespaces/v2/interfaces/BaseModelParams"}}');var t=a(31085),i=a(71184);const r={},c="Interface: BaseMetadata",o={},d=[];function l(e){const s={a:"a",code:"code",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"/api/",children:"@elizaos/core"})," / ",(0,t.jsx)(s.a,{href:"/api/@elizaos/namespaces/v2/",children:"v2"})," / BaseMetadata"]}),"\n",(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"interface-basemetadata",children:"Interface: BaseMetadata"})}),"\n",(0,t.jsxs)(s.p,{children:["Defined in: ",(0,t.jsx)(s.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/specs/v2/types.ts#L251",children:"packages/core/src/specs/v2/types.ts:251"})]}),"\n",(0,t.jsx)(s.p,{children:"Base interface for all memory metadata types.\nIt includes common properties for all memories, such as:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"type"}),": The kind of memory (e.g., ",(0,t.jsx)(s.code,{children:"MemoryType.MESSAGE"}),", ",(0,t.jsx)(s.code,{children:"MemoryType.DOCUMENT"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"source"}),": An optional string indicating the origin of the memory (e.g., 'discord', 'user_input')."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"sourceId"}),": An optional UUID linking to a source entity or object."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"scope"}),": The visibility scope of the memory (",(0,t.jsx)(s.code,{children:"shared"}),", ",(0,t.jsx)(s.code,{children:"private"}),", or ",(0,t.jsx)(s.code,{children:"room"}),")."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"timestamp"}),": An optional numerical timestamp (e.g., milliseconds since epoch) of when the memory was created or relevant."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"tags"}),": Optional array of strings for categorizing or filtering memories.\nSpecific metadata types like ",(0,t.jsx)(s.code,{children:"DocumentMetadata"})," or ",(0,t.jsx)(s.code,{children:"MessageMetadata"})," extend this base."]}),"\n"]})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},71184:(e,s,a)=>{a.d(s,{R:()=>r,x:()=>c});var n=a(14041);const t={},i=n.createContext(t);function r(e){const s=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);