"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[26581],{71184:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(14041);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}},93774:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"@elizaos/namespaces/v2/functions/isFragmentMemory","title":"isFragmentMemory","description":"@elizaos/core / v2 / isFragmentMemory","source":"@site/api/@elizaos/namespaces/v2/functions/isFragmentMemory.md","sourceDirName":"@elizaos/namespaces/v2/functions","slug":"/@elizaos/namespaces/v2/functions/isFragmentMemory","permalink":"/api/@elizaos/namespaces/v2/functions/isFragmentMemory","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"isDocumentMetadata","permalink":"/api/@elizaos/namespaces/v2/functions/isDocumentMetadata"},"next":{"title":"isFragmentMetadata","permalink":"/api/@elizaos/namespaces/v2/functions/isFragmentMetadata"}}');var a=s(31085),t=s(71184);const i={},o="Function: isFragmentMemory()",c={},m=[{value:"Parameters",id:"parameters",level:2},{value:"memory",id:"memory",level:3},{value:"Returns",id:"returns",level:2}];function l(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"/api/",children:"@elizaos/core"})," / ",(0,a.jsx)(n.a,{href:"/api/@elizaos/namespaces/v2/",children:"v2"})," / isFragmentMemory"]}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"function-isfragmentmemory",children:"Function: isFragmentMemory()"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"isFragmentMemory"}),"(",(0,a.jsx)(n.code,{children:"memory"}),"): ",(0,a.jsx)(n.code,{children:"memory is Memory & { metadata: FragmentMetadata }"})]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Defined in: ",(0,a.jsx)(n.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/specs/v2/types.ts#L2223",children:"packages/core/src/specs/v2/types.ts:2223"})]}),"\n",(0,a.jsx)(n.p,{children:"Memory type guard for fragment memories"}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(n.h3,{id:"memory",children:"memory"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/api/@elizaos/namespaces/v2/interfaces/Memory",children:(0,a.jsx)(n.code,{children:"Memory"})})}),"\n",(0,a.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"memory is Memory & { metadata: FragmentMetadata }"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);