"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[10798],{71184:(e,s,o)=>{o.d(s,{R:()=>t,x:()=>c});var r=o(14041);const i={},n=r.createContext(i);function t(e){const s=r.useContext(n);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(n.Provider,{value:s},e.children)}},86284:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"type-aliases/MemoryScope","title":"MemoryScope","description":"@elizaos/core / MemoryScope","source":"@site/api/type-aliases/MemoryScope.md","sourceDirName":"type-aliases","slug":"/type-aliases/MemoryScope","permalink":"/api/type-aliases/MemoryScope","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"Media","permalink":"/api/type-aliases/Media"},"next":{"title":"MemoryTypeAlias","permalink":"/api/type-aliases/MemoryTypeAlias"}}');var i=o(31085),n=o(71184);const t={},c="Type Alias: MemoryScope",a={},l=[];function p(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.a,{href:"/api/",children:"@elizaos/core"})," / MemoryScope"]}),"\n",(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"type-alias-memoryscope",children:"Type Alias: MemoryScope"})}),"\n",(0,i.jsxs)(s.blockquote,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"MemoryScope"})," = ",(0,i.jsx)(s.code,{children:'"shared"'})," | ",(0,i.jsx)(s.code,{children:'"private"'})," | ",(0,i.jsx)(s.code,{children:'"room"'})]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:["Defined in: ",(0,i.jsx)(s.a,{href:"https://github.com/sirgawain0x/elizaOS/blob/main/packages/core/src/types/memory.ts#L31",children:"packages/core/src/types/memory.ts:31"})]}),"\n",(0,i.jsx)(s.p,{children:"Defines the scope of a memory, indicating its visibility and accessibility."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"shared"}),": The memory is accessible to multiple entities or across different contexts (e.g., a public fact)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"private"}),": The memory is specific to a single entity or a private context (e.g., a user's personal preference)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"room"}),": The memory is scoped to a specific room or channel.\nThis is used in ",(0,i.jsx)(s.code,{children:"MemoryMetadata"})," to control how memories are stored and retrieved based on context."]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);